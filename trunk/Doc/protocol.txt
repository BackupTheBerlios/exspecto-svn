Описание протокола обмена между агентом и планировщиком:

Пакет с командами от хоста состои из следующих полей:
<packet>
	<Command>StartScan</Command>
	<>
</packet>

<packet>
	<Status>ok</Status>
</packet>

<packet>
	<CommandStatus>ok</CommandStatus>
	<host ip="127.0.0.1" hostname="ss">
		<file>
			<filepath>c:\sss</filepath>
			<filesize>123403424</filesize>
			<filedate>@$Tsdf</filedate>
		</file>
		<file>
			<filepath>c:\sdfs</filepath>
			<filesize>1234233424</filesize>
			<filedate>@$gdfdf</filedate>
		</file>
	</host>

1.Идентификатор команды
2.Параметры(зависят от команды)
3.Идентификатор команды
4.Параметры(зависят от команды)
5. ...
6. Поле "END"

Поля в сообщении ничем не разделены и разбираются при получении только по размеру.

В ответ на любую команду агент должен выдать один из статусов обработки команды(1байт):

RESP_OK = 0x00- команда принята на обработку
RESP_INPUT_DATA_ERR = 0x01- ошибка формата пакета
RESP_PROC_ERR = 0x02- ошибка выполнения команды

1.Команда получения состояния агента:

Идентификатор команды: GET_STATUS (0x01)
Параметры: нет

В первом байте возвращается код ответа агента, если команда отработана во втором байте - 
состояние агента
	Idling = 0x01,
	Scanning = 0x02,
	SendingData = 0x03,
	SendingStatus = 0x04

2.Команда начала сканирования:

Идентификатор команды: START_SCAN (0x02)
Параметры: список адресов в сетевом формате (4 байта на адрес)

В ответ на посылку команды приходит статус обработки команды

3.Команда прекращения сканирования:

Идентификатор команды: STOP_SCAN (0x04)
Параметры: нет

В ответ на посылку команды приходит статус обработки команды

4.Команда получения результатов сканирования:

Идентификатор команды: GET_DATA (0x03)
Параметры: нет

В первом байте приходит результат обработки команды
Если все нормально в след.4 байтах - размер данных
Далее сами данные
