//------------------------------------------------------------------------------------//
//ЬЇи·ЬЇифЬЇибЬЇи╜ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи╥ ЬЇи·ЬЇифЬЇибЬЇи╘ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи╔ЬЇи·ЬЇифЬЇибЬЇи╦ ЬЇи·ЬЇифЬЇибЬЇи▀ЬЇи·ЬЇифЬЇибЬЇи┬ЬЇи·ЬЇифЬЇибЬЇи╦ЬЇи·ЬЇифЬЇибЬЇи▀ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи▀ ЬЇи·ЬЇифЬЇибЬЇи╫ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи▄ЬЇи·ЬЇифЬЇибЬЇи▐ ЬЇи·ЬЇифЬЇибЬЇи╧ЬЇи·ЬЇифЬЇибЬЇи╨ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи╩ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи└ Exspecto 2006ЬЇи·ЬЇифЬЇибЬЇи├.
//Module: Agent handler class
//Author: Parshin Dmitry
//Description: ЬЇи·ЬЇифЬЇибЬЇиЇЬЇи·ЬЇифЬЇибЬЇи╦ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи╤, ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи╩ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи╧ЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи╙ЬЇи·ЬЇифЬЇибЬЇи╦ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи╨ЬЇи·ЬЇифЬЇибЬЇи╙ЬЇи·ЬЇифЬЇибЬЇи▐ЬЇи·ЬЇифЬЇибЬЇи┘ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи╔ ЬЇи·ЬЇифЬЇибЬЇи┬ЬЇи·ЬЇифЬЇибЬЇи╟ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи╠ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи─ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи╔ЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи┬ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи┼ ЬЇи·ЬЇифЬЇибЬЇи╤ ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи├ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи╠
//-------------------------------------------------------------------------------------//
#ifndef CAGENTHANDLER_H_
#define CAGENTHANDLER_H_

#include "ClientSocket.h"
#include "Packet.h"
#include "SmartPtr.hpp"
#include "Event.h"
#include "CDBProvider.h"
#include <set>
#include <Thread.h>


enum enumAgentResponse{
  RESP_OK = 0x00,
  RESP_INPUT_DATA_ERR = 0x01,
  RESP_PROC_ERR = 0x02
};

class CConnectionHandler;
class CReceiver;

class CAgentHandler
{
 public:

  class CConnectionHandler
  {
  public:

  CConnectionHandler( CAgentHandler* pAgentHandler )
	:m_pAgentHandler( pAgentHandler )
	  ,m_ListenThread( SmartPtr<CThreadTask>( new CListenThreadTask( this ) ), false )
	  {};

	virtual ~CConnectionHandler();

	void Listen( SmartPtr<CSocket> pSocket );

  private:

	class CListenThreadTask: public CThreadTask
	{
	public:

	CListenThreadTask( CConnectionHandler* pConnectionHandler ):
	  m_pConnectionHandler( pConnectionHandler )
	  {}
		  
	  virtual void Execute( CEvent& CancelEv );

	private:
		  
	  CConnectionHandler* m_pConnectionHandler;
	};

	CThread m_ListenThread;
	
	CEvent m_CloseEv;

	CAgentHandler* m_pAgentHandler;

	SmartPtr< CSocket > m_pSocket;
  };

  //ЬЇи·ЬЇифЬЇибЬЇи╩ЬЇи·ЬЇифЬЇибЬЇи╦ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи█ ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи╩ЬЇи·ЬЇифЬЇибЬЇи╦ЬЇи·ЬЇифЬЇибЬЇи▐ЬЇи·ЬЇифЬЇибЬЇи╫ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи╔, ЬЇи·ЬЇифЬЇибЬЇи├ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи╨ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи╨ЬЇи·ЬЇифЬЇибЬЇи╙ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи╠ЬЇи·ЬЇифЬЇибЬЇи█ЬЇи·ЬЇифЬЇибЬЇи╒ CAgentHandler
  class HandlerErr: public std::runtime_error
	{
	public:
	
	HandlerErr( const std::string& strErr ):std::runtime_error( strErr ){};
	  virtual ~HandlerErr()throw(){};	
	}; 
	
  virtual ~CAgentHandler();
	
  //ЬЇи·ЬЇифЬЇибЬЇи▒ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи╟ЬЇи·ЬЇифЬЇибЬЇи─ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи▄ ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи┴ЬЇи·ЬЇифЬЇибЬЇи▄ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи╩ЬЇи·ЬЇифЬЇибЬЇи╥ ЬЇи·ЬЇифЬЇибЬЇи┬ЬЇи·ЬЇифЬЇибЬЇи╟ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи╠ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи─ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи╔ЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи┬ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи▀ ЬЇи·ЬЇифЬЇибЬЇи╤ ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи├ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи╠ ЬЇи·ЬЇифЬЇибЬЇи╧ЬЇи·ЬЇифЬЇибЬЇи╬ ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи─ЬЇи·ЬЇифЬЇибЬЇи╨ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи╙ strAgentAddress 
  CAgentHandler( std::string strAgentAddress );
	
  //ЬЇи·ЬЇифЬЇибЬЇиїЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи╩ЬЇи·ЬЇифЬЇибЬЇи╨ЬЇи·ЬЇифЬЇибЬЇи█ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи▄ ЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи─ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи┼ ЬЇи·ЬЇифЬЇибЬЇи╤ ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи├ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи╠
  void Open();
	
  //ЬЇи·ЬЇифЬЇибБ╖ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи╩ЬЇи·ЬЇифЬЇибЬЇи╨ЬЇи·ЬЇифЬЇибЬЇи█ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи▄ ЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи─ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи┼ ЬЇи·ЬЇифЬЇибЬЇи╤ ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи├ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи╠
  void Close();
	
  //ЬЇи·ЬЇифЬЇибЬЇиЇЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи╠ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи─ЬЇи·ЬЇифЬЇибЬЇи█, ЬЇи·ЬЇифЬЇибЬЇи╧ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи╨ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи─ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи┬ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи╠ЬЇи·ЬЇифЬЇибЬЇи█ЬЇи·ЬЇифЬЇибЬЇи┼ ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи├ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи╙:
	
  //ЬЇи·ЬЇифЬЇибЬЇиеЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи╫ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи▄ ЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи╩ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи╨ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи┬ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи┼
  std::string BeginScan( std::vector< std::string > vecAddresses );
	
  //ЬЇи·ЬЇифЬЇибЬЇиїЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи┬ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи▄ ЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи╩ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи╨ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи┬ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи┼
  std::string StopScan();
	
  //ЬЇи·ЬЇифЬЇибЬЇиўЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи╦ЬЇи·ЬЇифЬЇибЬЇи╙ЬЇи·ЬЇифЬЇибЬЇи╫ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи▄ ЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи╙ЬЇи·ЬЇифЬЇибЬЇи╤
  std::string GetStatus( std::string& Status );
	
  //ЬЇи·ЬЇифЬЇибЬЇиўЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи╦ЬЇи·ЬЇифЬЇибЬЇи╙ЬЇи·ЬЇифЬЇибЬЇи╫ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи▄ ЬЇи·ЬЇифЬЇибЬЇи─ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи█ЬЇи·ЬЇифЬЇибЬЇи┼ ЬЇи·ЬЇифЬЇибЬЇи╧ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи╦ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи─ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи├ЬЇи·ЬЇифЬЇибЬЇи╬ ЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи╩ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи╨ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи┬ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи▀
  std::string GetData();
	
  //ЬЇи·ЬЇифЬЇибЬЇиїЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи╩ЬЇи·ЬЇифЬЇибЬЇи╨ЬЇи·ЬЇифЬЇибЬЇи█ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи╬ ЬЇи·ЬЇифЬЇибЬЇи╦ЬЇи·ЬЇифЬЇибЬЇи╚ ЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи─ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи┼ ЬЇи·ЬЇифЬЇибЬЇи╤ ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи├ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи╠
  bool IsOpened()const;
	
  void OnConnection( SmartPtr< CSocket > pSocket );
	
  CEvent& GetScanFinishedEvent(){ return m_ScanFinished; };
		
 protected:

  void OnMessage( CInPacket& Msg );
	
  //ЬЇи·ЬЇифЬЇибЬЇиїЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи╧ЬЇи·ЬЇифЬЇибЬЇи╨ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи┬ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи▄ ЬЇи·ЬЇифЬЇибЬЇи╧ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи╩ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи╥ Msg ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи├ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи╙ ЬЇи·ЬЇифЬЇибЬЇи╚ ЬЇи·ЬЇифЬЇибЬЇи╧ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи╦ЬЇи·ЬЇифЬЇибЬЇи╙ЬЇи·ЬЇифЬЇибЬЇи╫ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи▄ ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи┬ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи╥ ЬЇи·ЬЇифЬЇибЬЇи┬ pbRespBuf, iRespSize - ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи╞ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи─ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи╠ЬЇи·ЬЇифЬЇибЬЇи█ЬЇи·ЬЇифЬЇибЬЇи╔ ЬЇи·ЬЇифЬЇибЬЇи╨ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи╟ЬЇи·ЬЇифЬЇибЬЇи╠ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи╨ ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи┬ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи└
  //enumAgentResponse SendMessage( COutPacket &Msg, CReceiver& Receiver );

  void SendMessage( COutPacket &Msg, CInPacket& Response );
	
 private:
  CAgentHandler( const CAgentHandler& );
  CAgentHandler& operator=( const CAgentHandler& );

  //ЬЇи·ЬЇифЬЇибЬЇиЇЬЇи·ЬЇифЬЇибЬЇи╨ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи╫ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи╩ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи▀ ЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи╩ЬЇи·ЬЇифЬЇибЬЇи╓ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи▀ ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи└ ЬЇи·ЬЇифЬЇибЬЇи╧ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи█ЬЇи·ЬЇифЬЇибЬЇи╦ЬЇи·ЬЇифЬЇибЬЇи╩ЬЇи·ЬЇифЬЇибЬЇи╙ ЬЇи·ЬЇифЬЇибЬЇи╩ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи╠ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи─
  CMutex m_mtxExec;
	
  //ЬЇи·ЬЇифЬЇибБ░ЬЇи·ЬЇифЬЇибЬЇи─ЬЇи·ЬЇифЬЇибЬЇи╨ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи╤ ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи├ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи└
  std::string m_strAddress;
	
  //ЬЇи·ЬЇифЬЇибЬЇи▒ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи╩ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи╥ ЬЇи·ЬЇифЬЇибЬЇи─ЬЇи·ЬЇифЬЇибЬЇи╦ЬЇи·ЬЇифЬЇибЬЇи▀ ЬЇи·ЬЇифЬЇибЬЇи╤ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи─ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи▀ ЬЇи·ЬЇифЬЇибЬЇи╤ ЬЇи·ЬЇифЬЇибЬЇи└ЬЇи·ЬЇифЬЇибЬЇи├ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи╥ЬЇи·ЬЇифЬЇибЬЇи╬ЬЇи·ЬЇифЬЇибЬЇи╠
  CClientSocket m_Sock;
	
  SmartPtr< CConnectionHandler > m_pConnectionHandler;
	
  CEvent m_ScanFinished;

  //ЬЇи·ЬЇифЬЇибЬЇиўЬЇи·ЬЇифЬЇибЬЇи╨ЬЇи·ЬЇифЬЇибЬЇи╚ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи╠ЬЇи·ЬЇифЬЇибЬЇи═ЬЇи·ЬЇифЬЇибЬЇи█ЬЇи·ЬЇифЬЇибЬЇи╔ ЬЇи·ЬЇифЬЇибЬЇи┴ЬЇи·ЬЇифЬЇибЬЇи╙ЬЇи·ЬЇифЬЇибЬЇи╘ЬЇи·ЬЇифЬЇибЬЇи┼ЬЇи·ЬЇифЬЇибЬЇи╨
  std::vector<BYTE> m_vecRecvBuf;

};

#endif /*CAGENTHANDLER_H_*/
