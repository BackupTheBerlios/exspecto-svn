//-------------------------------------------------------------------------------------//
//œô¨Íœô¨âœô¨Þœô¨â œô¨äœô¨Ðœô¨Ùœô¨Û œô¨ïœô¨Òœô¨Ûœô¨ïœô¨Õœô¨âœô¨áœô¨ï œô¨çœô¨Ðœô¨áœô¨âœô¨ìœô¨î œô¨ßœô¨àœô¨Þœô¨Õœô¨Úœô¨âœô¨Ð Exspecto 2006œô¨Ó.
//Module: CServerSocket class
//Author: Parshin Dmitry
//Description: œô¨ºœô¨Ûœô¨Ðœô¨áœô¨á, œô¨àœô¨Õœô¨Ðœô¨Ûœô¨Øœô¨×œô¨ãœô¨îœô¨éœô¨Øœô¨Ù œô¨áœô¨Õœô¨àœô¨Òœô¨Õœô¨àœô¨Ýœô¨ãœô¨î œô¨çœô¨Ðœô¨áœô¨âœô¨ì œô¨áœô¨Þœô¨Úœô¨Õœô¨âœô¨Þœô¨Ò
//-------------------------------------------------------------------------------------//
#ifndef SERVERSOCKET_H_
#define SERVERSOCKET_H_

#include "Socket.h"
#include "SmartPtr.hpp"

class CServerSocket: public CSocket
{
public:

	//œô¨ºœô¨Þœô¨Ýœô¨áœô¨âœô¨àœô¨ãœô¨Úœô¨âœô¨Þœô¨à
	//iType - œô¨âœô¨Øœô¨ß œô¨áœô¨Þœô¨Úœô¨Õœô¨âœô¨Ð, œô¨Òœô¨Þœô¨×œô¨Üœô¨Þœô¨Öœô¨Ýœô¨ëœô¨Õ œô¨×œô¨Ýœô¨Ðœô¨çœô¨Õœô¨Ýœô¨Øœô¨ï - SOCK_STREAM œô¨Ø SOCK_DGRAM
	//bBlocking - œô¨Ñœô¨Ûœô¨Þœô¨Úœô¨Øœô¨àœô¨ãœô¨îœô¨éœô¨Øœô¨Ù œô¨Ûœô¨Øœô¨Ñœô¨Þ œô¨Ýœô¨Õ œô¨Ñœô¨Ûœô¨Þœô¨Úœô¨Øœô¨àœô¨ãœô¨îœô¨éœô¨Øœô¨Ù œô¨áœô¨Þœô¨Úœô¨Õœô¨â
	CServerSocket( int iType = SOCK_STREAM, bool bBlocking = true );

	CServerSocket( const CServerSocket& S );

	CServerSocket& operator=( const CServerSocket& );


	~CServerSocket(void);

	//œô¨Äœô¨ãœô¨Ýœô¨Úœô¨æœô¨Øœô¨ï "œô¨ßœô¨àœô¨Øœô¨Úœô¨àœô¨Õœô¨ßœô¨Ûœô¨Õœô¨Ýœô¨Øœô¨ï" œô¨áœô¨Þœô¨Úœô¨Õœô¨âœô¨Ð œô¨Ú œô¨Ðœô¨Ôœô¨àœô¨Õœô¨áœô¨ã, œô¨ßœô¨Þ œô¨ãœô¨Üœô¨Þœô¨Ûœô¨çœô¨Ðœô¨Ýœô¨Øœô¨î œô¨¾œô¨Á œô¨áœô¨Ðœô¨Üœô¨Ð œô¨Òœô¨ëœô¨Ñœô¨Øœô¨àœô¨Ðœô¨Õœô¨â œô¨Ðœô¨Ôœô¨àœô¨Õœô¨á œô¨Ø œô¨ßœô¨Þœô¨àœô¨â
	void Bind( int iPort = 0, std::string strAddr = "Any" );

	//œô¨Äœô¨ãœô¨Ýœô¨Úœô¨æœô¨Øœô¨ï œô¨Ýœô¨Ðœô¨çœô¨Ðœô¨Ûœô¨Ð "œô¨ßœô¨àœô¨Þœô¨áœô¨Ûœô¨ãœô¨èœô¨Øœô¨Òœô¨Ðœô¨Ýœô¨Øœô¨ï", iMaxConn - œô¨Üœô¨Ðœô¨Úœô¨áœô¨Øœô¨Üœô¨Ðœô¨Ûœô¨ìœô¨Ýœô¨Þœô¨Õ œô¨Úœô¨Þœô¨Û-œô¨Òœô¨Þ œô¨áœô¨Þœô¨Õœô¨Ôœô¨Øœô¨Ýœô¨Õœô¨Ýœô¨Øœô¨ï,
	//SOMAXCONN - œô¨Üœô¨Ðœô¨Úœô¨áœô¨Øœô¨Üœô¨Ðœô¨Ûœô¨ìœô¨Ýœô¨Þœô¨Õ œô¨×œô¨Ýœô¨Ðœô¨çœô¨Õœô¨Ýœô¨Øœô¨Õ
	void Listen( int iMaxConn = SOMAXCONN );

	//œô¨¿œô¨àœô¨Ø œô¨Òœô¨ëœô¨×œô¨Þœô¨Òœô¨Õ accept, œô¨áœô¨Þœô¨Úœô¨Õœô¨â œô¨Ñœô¨Ûœô¨Þœô¨Úœô¨Øœô¨àœô¨ãœô¨Õœô¨âœô¨áœô¨ï œô¨Òœô¨ßœô¨Ûœô¨Þœô¨âœô¨ì œô¨Ôœô¨Þ œô¨ßœô¨Þœô¨ïœô¨Òœô¨Ûœô¨Õœô¨Ýœô¨Øœô¨ï œô¨áœô¨Øœô¨Óœô¨Ýœô¨Ðœô¨Ûœô¨Ð œô¨Þ œô¨Òœô¨åœô¨Þœô¨Ôœô¨ïœô¨éœô¨Õœô¨Ü 
	//œô¨áœô¨Þœô¨Õœô¨Ôœô¨Øœô¨Ýœô¨Õœô¨Ýœô¨Øœô¨Ø (œô¨ßœô¨Þ œô¨Ðœô¨Ýœô¨Ðœô¨Ûœô¨Þœô¨Óœô¨Øœô¨Ø œô¨Ú œô¨äœô¨ãœô¨Ýœô¨Úœô¨æœô¨Øœô¨ïœô¨Ü œô¨Øœô¨× œô¨ßœô¨àœô¨Õœô¨Ôœô¨ëœô¨Ôœô¨ãœô¨éœô¨Õœô¨Ù œô¨áœô¨âœô¨Ðœô¨âœô¨ìœô¨Ø). œô¨Äœô¨ãœô¨Ýœô¨Úœô¨æœô¨Øœô¨ï œô¨Òœô¨Þœô¨×œô¨Òœô¨àœô¨Ðœô¨éœô¨Ðœô¨Õœô¨â 
	//œô¨Ýœô¨Þœô¨Òœô¨ëœô¨Ù œô¨áœô¨Þœô¨Úœô¨Õœô¨â, œô¨Úœô¨Þœô¨âœô¨Þœô¨àœô¨ëœô¨Ù œô¨Ñœô¨ãœô¨Ôœô¨Õœô¨â œô¨Øœô¨áœô¨ßœô¨Þœô¨Ûœô¨ìœô¨×œô¨Þœô¨Òœô¨Ðœô¨âœô¨ìœô¨áœô¨ï œô¨Ôœô¨Ûœô¨ï œô¨áœô¨Òœô¨ïœô¨×œô¨Ø œô¨á œô¨ßœô¨àœô¨Øœô¨áœô¨Þœô¨Õœô¨Ôœô¨Øœô¨Ýœô¨Øœô¨Òœô¨èœô¨Õœô¨Ùœô¨áœô¨ï œô¨Üœô¨Ðœô¨èœô¨Øœô¨Ýœô¨Þœô¨Ù 
	//(œô¨áœô¨Øœô¨áœô¨âœô¨Õœô¨Üœô¨Ð œô¨áœô¨Þœô¨×œô¨Ôœô¨Ðœô¨ñœô¨â œô¨Õœô¨Óœô¨Þ œô¨áœô¨Ðœô¨Üœô¨Ð, œô¨ßœô¨àœô¨Ø œô¨ãœô¨áœô¨ßœô¨Õœô¨èœô¨Ýœô¨Þœô¨Ü œô¨áœô¨Þœô¨Õœô¨Ôœô¨Øœô¨Ýœô¨Õœô¨Ýœô¨Øœô¨Ø). œô¨±œô¨Þœô¨Ûœô¨Õœô¨Õ œô¨ßœô¨Þœô¨Ôœô¨àœô¨Þœô¨Ñœô¨Ýœô¨ëœô¨Õ œô¨Ôœô¨Ðœô¨Ýœô¨Ýœô¨ëœô¨Õ 
	//œô¨Þ œô¨ßœô¨àœô¨Øœô¨áœô¨Þœô¨Õœô¨Ôœô¨Øœô¨Ýœô¨Øœô¨Òœô¨èœô¨Õœô¨Ùœô¨áœô¨ï œô¨Üœô¨Ðœô¨èœô¨Øœô¨Ýœô¨Õ accept œô¨Òœô¨Þœô¨×œô¨Òœô¨àœô¨Ðœô¨éœô¨Ðœô¨Õœô¨â œô¨Ò œô¨ßœô¨Ðœô¨àœô¨Ðœô¨Üœô¨Õœô¨âœô¨àœô¨Õ addr 
	//(œô¨âœô¨Øœô¨ß œô¨Ðœô¨Ôœô¨àœô¨Õœô¨áœô¨Ð, IP-œô¨Ðœô¨Ôœô¨àœô¨Õœô¨á, œô¨ßœô¨Þœô¨àœô¨â).
	SmartPtr< CSocket > Accept( structAddr& addr );
private:

};

#endif
